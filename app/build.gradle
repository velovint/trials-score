plugins {
    alias libs.plugins.android.app
    alias libs.plugins.kotlin.android
    alias libs.plugins.ksp
    alias libs.plugins.hilt
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "net.yakavenka.trialsscore"
        minSdk 26
        targetSdk 33
        versionCode 9
        versionName "1.1.1"

        ksp {
            arg("room.schemaLocation", "$projectDir/schemas".toString())
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments["dagger.hilt.disableModulesHaveInstallInCheck"] = "true"
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//        testInstrumentationRunnerArguments clearPackageData: "true"
    }

    buildFeatures {
        viewBinding true
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.6"
    }

    buildTypes {
        release {
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type. Make sure to use a build
            // variant with `isDebuggable=false`.
            minifyEnabled = true

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources = true

            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    testOptions {
        execution = "ANDROIDX_TEST_ORCHESTRATOR"
    }
    namespace 'net.yakavenka.trialsscore'
}

dependencies {
//    def composeBom = platform('androidx.compose:compose-bom:2023.10.01')

    implementation libs.androidx.activity.compose
    implementation libs.androidx.lifecycle.viewmodel.compose
    implementation libs.androidx.core.ktx
    implementation libs.androidx.material3
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.navigation.compose

    // Room
    implementation libs.androidx.room.runtime
    implementation libs.androidx.runtime.livedata
    implementation libs.androidx.lifecycle.livedata.ktx
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation libs.androidx.room.ktx
    ksp libs.room.compiler

    // Preferences
    implementation libs.androidx.datastore.preferences

    // Hilt
    implementation libs.androidx.hilt.navigation.compose
    implementation libs.hilt.android.core
    ksp libs.hilt.android.compiler

    // CSV
    implementation libs.opencsv

    // Android Studio Preview support
    implementation libs.androidx.ui.tooling.preview
    debugImplementation libs.androidx.ui.tooling.core

    testImplementation libs.junit
    testImplementation libs.hamcrest.library
    testImplementation libs.javafaker

    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation libs.espresso.contrib
    androidTestImplementation libs.javafaker

    // UI Tests
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.test.manifest

}